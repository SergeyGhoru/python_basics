python3 05.py                 
Filename: 05.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
     3     37.2 MiB     37.2 MiB           1   @profile
     4                                         def uniques_only_o_2(elements):
     5     37.2 MiB      0.0 MiB           1       not_uniques = set()
     6                                         
     7     37.2 MiB      0.0 MiB          15       for index in range(len(elements)):
     8     37.2 MiB      0.0 MiB         210           for index2 in range(len(elements)):
     9     37.2 MiB      0.0 MiB         196               if elements[index] == elements[index2] and index != index2:
    10     37.2 MiB      0.0 MiB          16                   not_uniques.add(elements[index])
    11                                         
    12     37.2 MiB      0.0 MiB           4       for el in not_uniques:
    13     37.2 MiB      0.0 MiB          67           elements = list(filter(lambda a: a != el, elements))
    14                                         
    15     37.2 MiB      0.0 MiB           1       return elements


[23, 1, 3, 10, 4, 11]
Filename: 05.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    18     37.2 MiB     37.2 MiB           1   @profile
    19                                         def uniques_only_o_n(elements):
    20     37.2 MiB      0.0 MiB          17       elements_capped = {el:elements.count(el) for el in elements}
    21     37.2 MiB      0.0 MiB          12       return [key for key, value in elements_capped.items() if value == 1]


[23, 1, 3, 10, 4, 11]
